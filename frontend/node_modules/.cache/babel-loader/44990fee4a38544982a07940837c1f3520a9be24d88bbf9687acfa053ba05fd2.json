{"ast":null,"code":"var _jsxFileName = \"/home/tonyg/Node-React.js-Expenses-Application/frontend/src/components/ViewExpenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewExpenses() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  {/*Created an array of months to be able to see the months in actual words in the JSX\n   rather than just numbers*/}\n  const months = [{\n    value: 1,\n    label: 'January'\n  }, {\n    value: 2,\n    label: 'February'\n  }, {\n    value: 3,\n    label: 'March'\n  }, {\n    value: 4,\n    label: 'April'\n  }, {\n    value: 5,\n    label: 'May'\n  }, {\n    value: 6,\n    label: 'June'\n  }, {\n    value: 7,\n    label: 'July'\n  }, {\n    value: 8,\n    label: 'August'\n  }, {\n    value: 9,\n    label: 'September'\n  }, {\n    value: 10,\n    label: 'October'\n  }, {\n    value: 11,\n    label: 'November'\n  }, {\n    value: 12,\n    label: 'December'\n  }];\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const token = window.localStorage.getItem('token');\n        const response = await axios.get('/api/profile', {\n          headers: {\n            Authorization: token\n          }\n        });\n        if (response.data.userId) {\n          //If true give me the expenses he's admin to \n          const expensesResponse = await axios.get(`http://localhost:5000/api/expenses/${response.data.userId}`);\n          const fetchedExppenses = expensesResponse.data;\n          setExpenses(fetchedExppenses || []);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchExpenses();\n  }, []);\n  const handleDelete = async expenseId => {\n    const confirmDelete = window.confirm(\"Are you want to delete this expense? \");\n    if (!confirmDelete) {\n      return;\n    }\n    try {\n      const token = window.localStorage.getItem('token');\n      const response = await axios.delete(`http://localhost:5000/api/expenses/${expenseId}`, {\n        headers: {\n          Authorization: token\n        }\n      });\n      if (response.status == 200) {\n        //Remove deleted expense from state\n        const updatedExpenses = expenses.filter(expense => expense._id !== expenseId);\n        setExpenses(updatedExpenses);\n      } else {\n        console.error('Failed to delete expense');\n      }\n    } catch (error) {\n      console.error('Error deleting expense:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \" View Building Expenses \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Expense Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date Created\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: expenses.length > 0 ? expenses.map(expense => {\n            var _months$find;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.type_expenses\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(expense.date_created).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: (_months$find = months.find(month => month.value === expense.month)) === null || _months$find === void 0 ? void 0 : _months$find.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                button: true,\n                onClick: () => handleDelete(expense._id),\n                className: \"btn btn-danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, expense._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              className: \"no-expenses\",\n              children: \" No expenses tied to this building...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewExpenses, \"r3Sal+OQhv7ETxtDPOJYfiWL3fU=\");\n_c = ViewExpenses;\nexport default ViewExpenses;\nvar _c;\n$RefreshReg$(_c, \"ViewExpenses\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ViewExpenses","_s","expenses","setExpenses","months","value","label","fetchExpenses","token","window","localStorage","getItem","response","get","headers","Authorization","data","userId","expensesResponse","fetchedExppenses","error","console","log","handleDelete","expenseId","confirmDelete","confirm","delete","status","updatedExpenses","filter","expense","_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","_months$find","type_expenses","total","Date","date_created","toLocaleDateString","find","month","year","button","onClick","colSpan","_c","$RefreshReg$"],"sources":["/home/tonyg/Node-React.js-Expenses-Application/frontend/src/components/ViewExpenses.js"],"sourcesContent":["import React, { useState , useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nfunction ViewExpenses() {\n    const [expenses , setExpenses] = useState([]);\n\n  {/*Created an array of months to be able to see the months in actual words in the JSX\n   rather than just numbers*/}\n    const months = [\n        {value: 1, label: 'January'},\n      {value:2 , label: 'February'},\n      {value:3 , label: 'March'},\n      {value:4 , label: 'April'},\n      {value:5 , label: 'May'},\n      {value:6 , label: 'June'},\n      {value:7 , label: 'July'},\n      {value:8 , label: 'August'},\n      {value:9 , label: 'September'},\n      {value:10, label: 'October'},\n      {value:11, label: 'November'},\n      {value:12, label: 'December'}\n    ];\n  useEffect(() => {\n    const fetchExpenses = async() => {\n      try {\n        const token = window.localStorage.getItem('token');\n        const response = await axios.get('/api/profile', {\n          headers: {Authorization: token},\n        });\n        if(response.data.userId) {\n          //If true give me the expenses he's admin to \n          const expensesResponse = await axios.get(\n            `http://localhost:5000/api/expenses/${response.data.userId}`\n          );\n          const fetchedExppenses = expensesResponse.data;\n          setExpenses(fetchedExppenses|| []);\n\n        }\n\n      }catch(error) {\n        console.log(error);\n      }\n    };\n    fetchExpenses();\n  }, []);\n\n \n\n  const handleDelete = async (expenseId) => {\n    const confirmDelete = window.confirm(\"Are you want to delete this expense? \");\n    if (!confirmDelete){\n      return;\n    }\n    try {\n      const token = window.localStorage.getItem('token');\n      const response = await axios.delete(`http://localhost:5000/api/expenses/${expenseId}` , {\n          headers : {Authorization : token},\n          \n    });\n\n    if (response.status == 200) {\n        //Remove deleted expense from state\n        const updatedExpenses = expenses.filter(expense => expense._id !== expenseId );\n        setExpenses(updatedExpenses);\n    }else{\n      console.error('Failed to delete expense');\n    }\n  }catch (error){\n    console.error('Error deleting expense:' , error)\n  }\n}\n     \n  return (\n    <div>\n      <div className='container'>\n        <h2 className='text-center'> View Building Expenses </h2>\n        <table className='table'>\n            <thead>\n                <tr>\n                    <th>Expense Type</th>\n                    <th>Total</th>\n                    <th>Date Created</th>\n                    <th>Month</th>\n                    <th>Year</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n              {expenses.length > 0 ? (\n                expenses.map((expense) =>(\n                  <tr key={expense._id}>\n                    <td>{expense.type_expenses}</td> \n                    <td>{expense.total}</td>\n                    <td>{new Date(expense.date_created).toLocaleDateString()}</td>\n                    {/* Represent the months as words based on the key , value pair */}\n                    <td>{months.find(month => month.value === expense.month)?.label}</td>\n                    <td>{expense.year}</td>\n                    <td button onClick={() => handleDelete(expense._id)} className='btn btn-danger'>Delete</td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                <td colSpan='5' className='no-expenses'> No expenses tied to this building...</td>\n                </tr>\n              )}\n            </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default ViewExpenses\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}