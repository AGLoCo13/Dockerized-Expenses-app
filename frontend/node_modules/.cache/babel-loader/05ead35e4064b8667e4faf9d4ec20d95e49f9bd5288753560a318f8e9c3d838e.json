{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';import{ToastContainer,toast}from'react-toastify';import'bootstrap/dist/css/bootstrap.min.css';import'../css/ExpensesCharge.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ExpensesCharge(){const[selectedFile,setSelectedFile]=useState(null);//New state for selected file\nconst[formData,setFormData]=useState({profile:'',total:'',date_created:'',document:'',month:'',year:'',type_expenses:''});const[building,setBuilding]=useState(null);const[expenses,setExpenses]=useState([]);const[administratorProfile,setAdministrator]=useState(null);const expenseTypes=['Heating','Elevator','General'];const months=[{value:1,label:'January'},{value:2,label:'February'},{value:3,label:'March'},{value:4,label:'April'},{value:5,label:'May'},{value:6,label:'June'},{value:7,label:'July'},{value:8,label:'August'},{value:9,label:'September'},{value:10,label:'October'},{value:11,label:'November'},{value:12,label:'December'}];//Generate a list of years startong from the current year up to some number of years in the future\nconst currentYear=new Date().getFullYear();const futureYears=10;const years=Array.from({length:futureYears},(_,i)=>currentYear+i);//Fetch all expenses\nconst fetchExpenses=async()=>{try{const response=await axios.get('/api/expenses');setExpenses(response.data);}catch(error){console.error('Error Fetching expenses:',error);}};const handleInputChange=event=>{const{name,value}=event.target;setFormData({...formData,[name]:value});};useEffect(()=>{const fetchBuildingAdministrator=async()=>{try{const token=window.localStorage.getItem('token');const response=await axios.get('/api/profile',{headers:{Authorization:token}});if(response.data.profileId){//If true give me the building he's admin to \nconst buildingResponse=await axios.get(\"\\n                /api/buildings/\".concat(response.data.profileId));const fetchedBuilding=buildingResponse.data;setBuilding(fetchedBuilding);//Fetch the profile user name tied to the Building\nsetAdministrator(fetchedBuilding.profile.user);}}catch(error){console.error(error);}};fetchBuildingAdministrator();},[]);const handleSubmit=async event=>{event.preventDefault();try{// Use the administrator's _id in the formData\nconst newFormData={...formData,profile:administratorProfile._id};//Set the current data and time for date_created\nnewFormData.date_created=new Date();//formData to Send WILL IMPLEMENT LATER THE UPLOADING OF FILES FOR RECEIPT\nconst formDataToSend=new FormData();for(const key in newFormData){formDataToSend.append(key,newFormData[key]);}if(selectedFile){formDataToSend.append('document',selectedFile);}//Debug log \nconsole.log(\"Sending form data:\",formDataToSend);//Make the POST request\nconst token=window.localStorage.getItem('token');await axios.post('/api/expenses',formDataToSend,{headers:{Authorization:token}});toast.success('Expense for apartment passed succesfully');}catch(error){toast.error('Error passing expense');}};const handleFileInputChange=event=>{const file=event.target.files[0];//Get the selected file\nsetSelectedFile(file);//Set the selected file to the state variable\n};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Pass Building Expenses \"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"profile\",children:\"Administrator: \"}),/*#__PURE__*/_jsx(\"p\",{className:\"form-control\",children:administratorProfile?administratorProfile.name:'Loading...'}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"type_expenses\",children:\"Expense type: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"type_expenses\",name:\"type_expenses\",className:\"form-control\",value:formData.type_expenses,onChange:handleInputChange,required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Expense Type\"}),expenseTypes.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type,children:type},type))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"total\",children:\" Total: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"total\",name:\"total\",className:\"form-control\",value:formData.total,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"document\",className:\"receipt-label\",children:\" Receipt: \"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"document\",name:\"document\",accept:\"image/*, .pdf\"//Specify the allowed file types\n,onChange:handleFileInputChange}),selectedFile&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Selected File: \",selectedFile.name]}),\" \",/*#__PURE__*/_jsx(\"label\",{htmlFor:\"month\",className:\"month-label\",children:\"Month: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"month\",name:\"month\",className:\"form-control\",value:formData.month,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a month\"}),months.map(month=>/*#__PURE__*/_jsx(\"option\",{value:month.value,children:month.label},month.value))]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year\",children:\" Year: \"}),/*#__PURE__*/_jsxs(\"select\",{id:\"year\",name:\"year\",className:\"form-control\",value:formData.year,onChange:handleInputChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a year\"}),years.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Pass Expense\"})]})]});}export default ExpensesCharge;","map":{"version":3,"names":["React","useEffect","useState","axios","ToastContainer","toast","jsx","_jsx","jsxs","_jsxs","ExpensesCharge","selectedFile","setSelectedFile","formData","setFormData","profile","total","date_created","document","month","year","type_expenses","building","setBuilding","expenses","setExpenses","administratorProfile","setAdministrator","expenseTypes","months","value","label","currentYear","Date","getFullYear","futureYears","years","Array","from","length","_","i","fetchExpenses","response","get","data","error","console","handleInputChange","event","name","target","fetchBuildingAdministrator","token","window","localStorage","getItem","headers","Authorization","profileId","buildingResponse","concat","fetchedBuilding","user","handleSubmit","preventDefault","newFormData","_id","formDataToSend","FormData","key","append","log","post","success","handleFileInputChange","file","files","className","children","onSubmit","htmlFor","id","onChange","required","map","type","accept"],"sources":["/home/tonyg/Node-React.js-Expenses-Application/frontend/src/components/ExpensesCharge.js"],"sourcesContent":["import React , {useEffect , useState} from 'react'\nimport axios from 'axios';\nimport { ToastContainer , toast } from 'react-toastify';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/ExpensesCharge.css'\nfunction ExpensesCharge() {\n    const [selectedFile , setSelectedFile] = useState(null); //New state for selected file\n    const [formData , setFormData] = useState({\n        profile: '',\n        total: '',\n        date_created:'',\n        document:'',\n        month:'',\n        year:'',\n        type_expenses:''\n\n    })\n    const [building , setBuilding] = useState(null);\n    const [expenses , setExpenses ] = useState([]);\n    const [administratorProfile , setAdministrator] = useState(null);\n    const expenseTypes = ['Heating', 'Elevator' , 'General'];\n    const months = [\n      {value: 1, label: 'January'},\n      {value:2 , label: 'February'},\n      {value:3 , label: 'March'},\n      {value:4 , label: 'April'},\n      {value:5 , label: 'May'},\n      {value:6 , label: 'June'},\n      {value:7 , label: 'July'},\n      {value:8 , label: 'August'},\n      {value:9 , label: 'September'},\n      {value:10, label: 'October'},\n      {value:11, label: 'November'},\n      {value:12, label: 'December'}\n    ];\n     //Generate a list of years startong from the current year up to some number of years in the future\n     const currentYear = new Date().getFullYear();\n     const futureYears = 10;\n     const years = Array.from({length: futureYears}, (_, i) => currentYear + i);\n     //Fetch all expenses\n     const fetchExpenses = async () => {\n      try {\n        const response = await axios.get('/api/expenses');\n        setExpenses(response.data);\n      } catch(error) {\n        console.error('Error Fetching expenses:' , error);\n      }\n     };\n\n     const handleInputChange = (event) => {\n      const {name , value } = event.target;\n      setFormData({\n        ...formData,\n        [name] : value,\n      });\n      };\n      useEffect (() => {\n        const fetchBuildingAdministrator = async () => {\n          try {\n             const token = window.localStorage.getItem('token');\n              const response = await axios.get('/api/profile', {\n                headers: {Authorization : token},\n              });\n  \n              if (response.data.profileId){\n                //If true give me the building he's admin to \n                const buildingResponse = await axios.get(`\n                /api/buildings/${response.data.profileId}`);\n                const fetchedBuilding = buildingResponse.data;\n                setBuilding(fetchedBuilding);\n                //Fetch the profile user name tied to the Building\n                setAdministrator(fetchedBuilding.profile.user);\n              }\n        }catch(error){\n              console.error(error);\n        }\n      }\n        fetchBuildingAdministrator();\n      }, []);\n      \n     const handleSubmit = async (event) => {\n      event.preventDefault();\n      try{\n        // Use the administrator's _id in the formData\n        const newFormData = {...formData , profile: administratorProfile._id}\n        //Set the current data and time for date_created\n        newFormData.date_created = new Date();\n         //formData to Send WILL IMPLEMENT LATER THE UPLOADING OF FILES FOR RECEIPT\n        const formDataToSend = new FormData();\n        for (const key in newFormData) {\n          formDataToSend.append(key , newFormData[key]);\n        }\n        if (selectedFile) {\n          formDataToSend.append('document' , selectedFile);\n        }\n        //Debug log \n        console.log(\"Sending form data:\" , formDataToSend);\n        //Make the POST request\n        const token = window.localStorage.getItem('token');\n        await axios.post('/api/expenses' , formDataToSend , {\n          headers: {Authorization: token},\n        });\n        toast.success('Expense for apartment passed succesfully');\n      } catch(error) {\n        toast.error('Error passing expense')\n      }\n    }\n    const handleFileInputChange = (event) => {\n      const file = event.target.files[0]; //Get the selected file\n      setSelectedFile(file); //Set the selected file to the state variable\n    };\n\n\n  return (\n    <div className='container'>\n      <h2 className='text-center'>Pass Building Expenses </h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor='profile'>Administrator: </label>\n        <p className='form-control'>{administratorProfile ? administratorProfile.name : 'Loading...'}</p>\n        <label htmlFor='type_expenses'>Expense type: </label>\n        <select \n          id='type_expenses'\n          name='type_expenses'\n          className='form-control'\n          value={formData.type_expenses}\n          onChange={handleInputChange}\n          required\n          >\n            <option value=''>Select Expense Type</option>\n            {expenseTypes.map((type) => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </select>\n        <label htmlFor = 'total'> Total: </label>\n        <input\n          type = \"number\"\n          id=\"total\"\n          name=\"total\"\n          className='form-control'\n          value={formData.total}\n          onChange={handleInputChange}\n          />\n\n          <label htmlFor='document' className='receipt-label'> Receipt: </label>\n          <input \n            type='file'\n            id='document'\n            name='document'\n            accept='image/*, .pdf' //Specify the allowed file types\n            onChange={handleFileInputChange}\n            />\n            {selectedFile && <p>Selected File: {selectedFile.name}</p>} {/*Display the selected file name */}\n\n\n          <label htmlFor='month' className='month-label'>Month: </label>\n          <select \n            id=\"month\"\n            name=\"month\"\n            className='form-control'\n            value={formData.month}\n            onChange={handleInputChange}\n            >\n              <option value=\"\">Select a month</option>\n              {months.map((month) => (\n                <option key = {month.value} value={month.value}>\n                  {month.label}\n                </option>\n              ))}\n            </select>\n            <label htmlFor='year'> Year: </label>\n            <select\n              id='year'\n              name='year'\n              className='form-control'\n              value={formData.year}\n              onChange={handleInputChange}\n              >\n                <option value=''>Select a year</option>\n                {years.map((year) => (\n                  <option key={year} value={year}>\n                    {year}\n                  </option>\n                ))}\n              </select>\n            <button type='submit' className='btn btn-primary'>\n              Pass Expense\n            </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ExpensesCharge\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}