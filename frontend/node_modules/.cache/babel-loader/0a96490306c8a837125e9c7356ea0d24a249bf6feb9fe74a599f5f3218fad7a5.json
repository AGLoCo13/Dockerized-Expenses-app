{"ast":null,"code":"var _jsxFileName = \"/home/tonyg/Node-React.js-Expenses-Application/frontend/src/components/ExpensesCharge.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/ExpensesCharge.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpensesCharge() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null); //New state for selected file\n  const [formData, setFormData] = useState({\n    profile: '',\n    total: '',\n    date_created: '',\n    document: '',\n    month: '',\n    year: '',\n    type_expenses: ''\n  });\n  const [building, setBuilding] = useState(null);\n  const [expenses, setExpenses] = useState([]);\n  const [administratorProfile, setAdministrator] = useState(null);\n  const expenseTypes = ['Heating', 'Elevator', 'General'];\n  const months = [{\n    value: 1,\n    label: 'January'\n  }, {\n    value: 2,\n    label: 'February'\n  }, {\n    value: 3,\n    label: 'March'\n  }, {\n    value: 4,\n    label: 'April'\n  }, {\n    value: 5,\n    label: 'May'\n  }, {\n    value: 6,\n    label: 'June'\n  }, {\n    value: 7,\n    label: 'July'\n  }, {\n    value: 8,\n    label: 'August'\n  }, {\n    value: 9,\n    label: 'September'\n  }, {\n    value: 10,\n    label: 'October'\n  }, {\n    value: 11,\n    label: 'November'\n  }, {\n    value: 12,\n    label: 'December'\n  }];\n  //Generate a list of years startong from the current year up to some number of years in the future\n  const currentYear = new Date().getFullYear();\n  const futureYears = 10;\n  const years = Array.from({\n    length: futureYears\n  }, (_, i) => currentYear + i);\n  //Fetch all expenses\n  const fetchExpenses = async () => {\n    try {\n      const response = await axios.get('/api/expenses');\n      setExpenses(response.data);\n    } catch (error) {\n      console.error('Error Fetching expenses:', error);\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  useEffect(() => {\n    const fetchBuildingAdministrator = async () => {\n      try {\n        const token = window.localStorage.getItem('token');\n        const response = await axios.get('/api/profile', {\n          headers: {\n            Authorization: token\n          }\n        });\n        if (response.data.profileId) {\n          //If true give me the building he's admin to \n          const buildingResponse = await axios.get(`\n                /api/buildings/${response.data.profileId}`);\n          const fetchedBuilding = buildingResponse.data;\n          setBuilding(fetchedBuilding);\n          //Fetch the profile user name tied to the Building\n          setAdministrator(fetchedBuilding.profile.user);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBuildingAdministrator();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Use the administrator's _id in the formData\n      const newFormData = {\n        ...formData,\n        profile: administratorProfile._id\n      };\n      //Set the current data and time for date_created\n      newFormData.date_created = new Date();\n      //formData to Send WILL IMPLEMENT LATER THE UPLOADING OF FILES FOR RECEIPT\n      const formDataToSend = new FormData();\n      for (const key in newFormData) {\n        formDataToSend.append(key, newFormData[key]);\n      }\n      if (selectedFile) {\n        formDataToSend.append('document', selectedFile);\n      }\n      //Debug log \n      console.log(\"Sending form data:\", formDataToSend);\n      //Make the POST request\n      const token = window.localStorage.getItem('token');\n      await axios.post('http://localhost:5000/api/expenses', formDataToSend, {\n        headers: {\n          Authorization: token\n        }\n      });\n      toast.success('Expense for apartment passed succesfully');\n    } catch (error) {\n      toast.error('Error passing expense');\n    }\n  };\n  const handleFileInputChange = event => {\n    const file = event.target.files[0]; //Get the selected file\n    setSelectedFile(file); //Set the selected file to the state variable\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"Pass Building Expenses \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profile\",\n        children: \"Administrator: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-control\",\n        children: administratorProfile ? administratorProfile.name : 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type_expenses\",\n        children: \"Expense type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type_expenses\",\n        name: \"type_expenses\",\n        className: \"form-control\",\n        value: formData.type_expenses,\n        onChange: handleInputChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Expense Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), expenseTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"total\",\n        children: \" Total: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"total\",\n        name: \"total\",\n        className: \"form-control\",\n        value: formData.total,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"document\",\n        className: \"receipt-label\",\n        children: \" Receipt: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"document\",\n        name: \"document\",\n        accept: \"image/*, .pdf\" //Specify the allowed file types\n        ,\n        onChange: handleFileInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected File: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 30\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month\",\n        className: \"month-label\",\n        children: \"Month: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month\",\n        name: \"month\",\n        className: \"form-control\",\n        value: formData.month,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month.value,\n          children: month.label\n        }, month.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        children: \" Year: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year\",\n        name: \"year\",\n        className: \"form-control\",\n        value: formData.year,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Pass Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpensesCharge, \"V+0dX3mMiu8j+W/Pw/ZoW1TtcEA=\");\n_c = ExpensesCharge;\nexport default ExpensesCharge;\nvar _c;\n$RefreshReg$(_c, \"ExpensesCharge\");","map":{"version":3,"names":["React","useEffect","useState","axios","ToastContainer","toast","jsxDEV","_jsxDEV","ExpensesCharge","_s","selectedFile","setSelectedFile","formData","setFormData","profile","total","date_created","document","month","year","type_expenses","building","setBuilding","expenses","setExpenses","administratorProfile","setAdministrator","expenseTypes","months","value","label","currentYear","Date","getFullYear","futureYears","years","Array","from","length","_","i","fetchExpenses","response","get","data","error","console","handleInputChange","event","name","target","fetchBuildingAdministrator","token","window","localStorage","getItem","headers","Authorization","profileId","buildingResponse","fetchedBuilding","user","handleSubmit","preventDefault","newFormData","_id","formDataToSend","FormData","key","append","log","post","success","handleFileInputChange","file","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","map","type","accept","_c","$RefreshReg$"],"sources":["/home/tonyg/Node-React.js-Expenses-Application/frontend/src/components/ExpensesCharge.js"],"sourcesContent":["import React , {useEffect , useState} from 'react'\nimport axios from 'axios';\nimport { ToastContainer , toast } from 'react-toastify';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/ExpensesCharge.css'\nfunction ExpensesCharge() {\n    const [selectedFile , setSelectedFile] = useState(null); //New state for selected file\n    const [formData , setFormData] = useState({\n        profile: '',\n        total: '',\n        date_created:'',\n        document:'',\n        month:'',\n        year:'',\n        type_expenses:''\n\n    })\n    const [building , setBuilding] = useState(null);\n    const [expenses , setExpenses ] = useState([]);\n    const [administratorProfile , setAdministrator] = useState(null);\n    const expenseTypes = ['Heating', 'Elevator' , 'General'];\n    const months = [\n      {value: 1, label: 'January'},\n      {value:2 , label: 'February'},\n      {value:3 , label: 'March'},\n      {value:4 , label: 'April'},\n      {value:5 , label: 'May'},\n      {value:6 , label: 'June'},\n      {value:7 , label: 'July'},\n      {value:8 , label: 'August'},\n      {value:9 , label: 'September'},\n      {value:10, label: 'October'},\n      {value:11, label: 'November'},\n      {value:12, label: 'December'}\n    ];\n     //Generate a list of years startong from the current year up to some number of years in the future\n     const currentYear = new Date().getFullYear();\n     const futureYears = 10;\n     const years = Array.from({length: futureYears}, (_, i) => currentYear + i);\n     //Fetch all expenses\n     const fetchExpenses = async () => {\n      try {\n        const response = await axios.get('/api/expenses');\n        setExpenses(response.data);\n      } catch(error) {\n        console.error('Error Fetching expenses:' , error);\n      }\n     };\n\n     const handleInputChange = (event) => {\n      const {name , value } = event.target;\n      setFormData({\n        ...formData,\n        [name] : value,\n      });\n      };\n      useEffect (() => {\n        const fetchBuildingAdministrator = async () => {\n          try {\n             const token = window.localStorage.getItem('token');\n              const response = await axios.get('/api/profile', {\n                headers: {Authorization : token},\n              });\n  \n              if (response.data.profileId){\n                //If true give me the building he's admin to \n                const buildingResponse = await axios.get(`\n                /api/buildings/${response.data.profileId}`);\n                const fetchedBuilding = buildingResponse.data;\n                setBuilding(fetchedBuilding);\n                //Fetch the profile user name tied to the Building\n                setAdministrator(fetchedBuilding.profile.user);\n              }\n        }catch(error){\n              console.error(error);\n        }\n      }\n        fetchBuildingAdministrator();\n      }, []);\n      \n     const handleSubmit = async (event) => {\n      event.preventDefault();\n      try{\n        // Use the administrator's _id in the formData\n        const newFormData = {...formData , profile: administratorProfile._id}\n        //Set the current data and time for date_created\n        newFormData.date_created = new Date();\n         //formData to Send WILL IMPLEMENT LATER THE UPLOADING OF FILES FOR RECEIPT\n        const formDataToSend = new FormData();\n        for (const key in newFormData) {\n          formDataToSend.append(key , newFormData[key]);\n        }\n        if (selectedFile) {\n          formDataToSend.append('document' , selectedFile);\n        }\n        //Debug log \n        console.log(\"Sending form data:\" , formDataToSend);\n        //Make the POST request\n        const token = window.localStorage.getItem('token');\n        await axios.post('http://localhost:5000/api/expenses' , formDataToSend , {\n          headers: {Authorization: token},\n        });\n        toast.success('Expense for apartment passed succesfully');\n      } catch(error) {\n        toast.error('Error passing expense')\n      }\n    }\n    const handleFileInputChange = (event) => {\n      const file = event.target.files[0]; //Get the selected file\n      setSelectedFile(file); //Set the selected file to the state variable\n    };\n\n\n  return (\n    <div className='container'>\n      <h2 className='text-center'>Pass Building Expenses </h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor='profile'>Administrator: </label>\n        <p className='form-control'>{administratorProfile ? administratorProfile.name : 'Loading...'}</p>\n        <label htmlFor='type_expenses'>Expense type: </label>\n        <select \n          id='type_expenses'\n          name='type_expenses'\n          className='form-control'\n          value={formData.type_expenses}\n          onChange={handleInputChange}\n          required\n          >\n            <option value=''>Select Expense Type</option>\n            {expenseTypes.map((type) => (\n              <option key={type} value={type}>\n                {type}\n              </option>\n            ))}\n          </select>\n        <label htmlFor = 'total'> Total: </label>\n        <input\n          type = \"number\"\n          id=\"total\"\n          name=\"total\"\n          className='form-control'\n          value={formData.total}\n          onChange={handleInputChange}\n          />\n\n          <label htmlFor='document' className='receipt-label'> Receipt: </label>\n          <input \n            type='file'\n            id='document'\n            name='document'\n            accept='image/*, .pdf' //Specify the allowed file types\n            onChange={handleFileInputChange}\n            />\n            {selectedFile && <p>Selected File: {selectedFile.name}</p>} {/*Display the selected file name */}\n\n\n          <label htmlFor='month' className='month-label'>Month: </label>\n          <select \n            id=\"month\"\n            name=\"month\"\n            className='form-control'\n            value={formData.month}\n            onChange={handleInputChange}\n            >\n              <option value=\"\">Select a month</option>\n              {months.map((month) => (\n                <option key = {month.value} value={month.value}>\n                  {month.label}\n                </option>\n              ))}\n            </select>\n            <label htmlFor='year'> Year: </label>\n            <select\n              id='year'\n              name='year'\n              className='form-control'\n              value={formData.year}\n              onChange={handleInputChange}\n              >\n                <option value=''>Select a year</option>\n                {years.map((year) => (\n                  <option key={year} value={year}>\n                    {year}\n                  </option>\n                ))}\n              </select>\n            <button type='submit' className='btn btn-primary'>\n              Pass Expense\n            </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ExpensesCharge\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}